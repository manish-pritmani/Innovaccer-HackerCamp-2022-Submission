{"ast":null,"code":"'use strict';\n\nvar cleanURL = require('../plugins/cleanurl'),\n    XHR = require('./xhr'),\n    delay = require('./utils/delay'),\n    RequestError = require('./error'),\n    Response = require('./response'),\n    Request = require('./request'),\n    extend = require('xtend'),\n    once = require('./utils/once');\n\nvar i,\n    createError = RequestError.create;\n\nfunction factory(defaults, plugins) {\n  defaults = defaults || {};\n  plugins = plugins || [];\n\n  function http(req, cb) {\n    var xhr, plugin, done, k, timeoutId, supportsLoadAndErrorEvents;\n    req = new Request(extend(defaults, req));\n\n    for (i = 0; i < plugins.length; i++) {\n      plugin = plugins[i];\n\n      if (plugin.processRequest) {\n        plugin.processRequest(req);\n      }\n    } // Give the plugins a chance to create the XHR object\n\n\n    for (i = 0; i < plugins.length; i++) {\n      plugin = plugins[i];\n\n      if (plugin.createXHR) {\n        xhr = plugin.createXHR(req);\n        break; // First come, first serve\n      }\n    }\n\n    xhr = xhr || new XHR();\n    req.xhr = xhr; // Use a single completion callback. This can be called with or without\n    // an error. If no error is passed, the request will be examined to see\n    // if it was successful.\n\n    done = once(delay(function (rawError) {\n      clearTimeout(timeoutId);\n      xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = xhr.ontimeout = xhr.onprogress = null;\n      var err = getError(req, rawError);\n      var res = err || Response.fromRequest(req);\n\n      for (i = 0; i < plugins.length; i++) {\n        plugin = plugins[i];\n\n        if (plugin.processResponse) {\n          plugin.processResponse(res);\n        }\n      } // Invoke callbacks\n\n\n      if (err && req.onerror) req.onerror(err);\n      if (!err && req.onload) req.onload(res);\n      if (cb) cb(err, err ? undefined : res);\n    }));\n    supportsLoadAndErrorEvents = 'onload' in xhr && 'onerror' in xhr;\n\n    xhr.onload = function () {\n      done();\n    };\n\n    xhr.onerror = done;\n\n    xhr.onabort = function () {\n      done();\n    }; // We'd rather use `onload`, `onerror`, and `onabort` since they're the\n    // only way to reliably detect successes and failures but, if they\n    // aren't available, we fall back to using `onreadystatechange`.\n\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState !== 4) return;\n      if (req.aborted) return done();\n\n      if (!supportsLoadAndErrorEvents) {\n        // Assume a status of 0 is an error. This could be a false\n        // positive, but there's no way to tell when using\n        // `onreadystatechange` ):\n        // See matthewwithanm/react-inlinesvg#10.\n        // Some browsers don't like you reading XHR properties when the\n        // XHR has been aborted. In case we've gotten here as a result\n        // of that (either our calling `about()` in the timeout handler\n        // or the user calling it directly even though they shouldn't),\n        // be careful about accessing it.\n        var status;\n\n        try {\n          status = xhr.status;\n        } catch (err) {}\n\n        var err = status === 0 ? new Error('Internal XHR Error') : null;\n        return done(err);\n      }\n    }; // IE sometimes fails if you don't specify every handler.\n    // See http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n\n\n    xhr.ontimeout = function () {\n      /* noop */\n    };\n\n    xhr.onprogress = function () {\n      /* noop */\n    };\n\n    xhr.open(req.method, req.url);\n\n    if (req.timeout) {\n      // If we use the normal XHR timeout mechanism (`xhr.timeout` and\n      // `xhr.ontimeout`), `onreadystatechange` will be triggered before\n      // `ontimeout`. There's no way to recognize that it was triggered by\n      // a timeout, and we'd be unable to dispatch the right error.\n      timeoutId = setTimeout(function () {\n        req.timedOut = true;\n        done();\n\n        try {\n          xhr.abort();\n        } catch (err) {}\n      }, req.timeout);\n    }\n\n    for (k in req.headers) {\n      if (req.headers.hasOwnProperty(k)) {\n        xhr.setRequestHeader(k, req.headers[k]);\n      }\n    }\n\n    xhr.send(req.body);\n    return req;\n  }\n\n  var method,\n      methods = ['get', 'post', 'put', 'head', 'patch', 'delete'],\n      verb = function (method) {\n    return function (req, cb) {\n      req = new Request(req);\n      req.method = method;\n      return http(req, cb);\n    };\n  };\n\n  for (i = 0; i < methods.length; i++) {\n    method = methods[i];\n    http[method] = verb(method);\n  }\n\n  http.plugins = function () {\n    return plugins;\n  };\n\n  http.defaults = function (newValues) {\n    if (newValues) {\n      return factory(extend(defaults, newValues), plugins);\n    }\n\n    return defaults;\n  };\n\n  http.use = function () {\n    var newPlugins = Array.prototype.slice.call(arguments, 0);\n    return factory(defaults, plugins.concat(newPlugins));\n  };\n\n  http.bare = function () {\n    return factory();\n  };\n\n  http.Request = Request;\n  http.Response = Response;\n  http.RequestError = RequestError;\n  return http;\n}\n\nmodule.exports = factory({}, [cleanURL]);\n/**\n * Analyze the request to see if it represents an error. If so, return it! An\n * original error object can be passed as a hint.\n */\n\nfunction getError(req, err) {\n  if (req.aborted) return createError('Request aborted', req, {\n    name: 'Abort'\n  });\n  if (req.timedOut) return createError('Request timeout', req, {\n    name: 'Timeout'\n  });\n  var xhr = req.xhr;\n  var type = Math.floor(xhr.status / 100);\n  var kind;\n\n  switch (type) {\n    case 0:\n    case 2:\n      // These don't represent errors unless the function was passed an\n      // error object explicitly.\n      if (!err) return;\n      return createError(err.message, req);\n\n    case 4:\n      // Sometimes 4XX statuses aren't errors.\n      if (xhr.status === 404 && !req.errorOn404) return;\n      kind = 'Client';\n      break;\n\n    case 5:\n      kind = 'Server';\n      break;\n\n    default:\n      kind = 'HTTP';\n  }\n\n  var msg = kind + ' Error: ' + 'The server returned a status of ' + xhr.status + ' for the request \"' + req.method.toUpperCase() + ' ' + req.url + '\"';\n  return createError(msg, req);\n}","map":{"version":3,"sources":["C:/Users/GodFather/Pictures/ecovia/client/node_modules/httpplease/lib/index.js"],"names":["cleanURL","require","XHR","delay","RequestError","Response","Request","extend","once","i","createError","create","factory","defaults","plugins","http","req","cb","xhr","plugin","done","k","timeoutId","supportsLoadAndErrorEvents","length","processRequest","createXHR","rawError","clearTimeout","onload","onerror","onabort","onreadystatechange","ontimeout","onprogress","err","getError","res","fromRequest","processResponse","undefined","readyState","aborted","status","Error","open","method","url","timeout","setTimeout","timedOut","abort","headers","hasOwnProperty","setRequestHeader","send","body","methods","verb","newValues","use","newPlugins","Array","prototype","slice","call","arguments","concat","bare","module","exports","name","type","Math","floor","kind","message","errorOn404","msg","toUpperCase"],"mappings":"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","sourcesContent":["'use strict';\n\nvar\n  cleanURL = require('../plugins/cleanurl'),\n  XHR = require('./xhr'),\n  delay = require('./utils/delay'),\n  RequestError = require('./error'),\n  Response = require('./response'),\n  Request = require('./request'),\n  extend = require('xtend'),\n  once = require('./utils/once');\n\nvar i,\n    createError = RequestError.create;\n\nfunction factory(defaults, plugins) {\n  defaults = defaults || {};\n  plugins = plugins || [];\n\n  function http(req, cb) {\n    var xhr, plugin, done, k, timeoutId, supportsLoadAndErrorEvents;\n\n    req = new Request(extend(defaults, req));\n\n    for (i = 0; i < plugins.length; i++) {\n      plugin = plugins[i];\n      if (plugin.processRequest) {\n        plugin.processRequest(req);\n      }\n    }\n\n    // Give the plugins a chance to create the XHR object\n    for (i = 0; i < plugins.length; i++) {\n      plugin = plugins[i];\n      if (plugin.createXHR) {\n        xhr = plugin.createXHR(req);\n        break; // First come, first serve\n      }\n    }\n    xhr = xhr || new XHR();\n\n    req.xhr = xhr;\n\n    // Use a single completion callback. This can be called with or without\n    // an error. If no error is passed, the request will be examined to see\n    // if it was successful.\n    done = once(delay(function(rawError) {\n      clearTimeout(timeoutId);\n      xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = xhr.ontimeout = xhr.onprogress = null;\n\n      var err = getError(req, rawError);\n\n      var res = err || Response.fromRequest(req);\n      for (i = 0; i < plugins.length; i++) {\n        plugin = plugins[i];\n        if (plugin.processResponse) {\n          plugin.processResponse(res);\n        }\n      }\n\n      // Invoke callbacks\n      if (err && req.onerror) req.onerror(err);\n      if (!err && req.onload) req.onload(res);\n      if (cb) cb(err, err ? undefined : res);\n\n    }));\n\n    supportsLoadAndErrorEvents = ('onload' in xhr) && ('onerror' in xhr);\n    xhr.onload = function() { done(); };\n    xhr.onerror = done;\n    xhr.onabort = function() { done(); };\n\n    // We'd rather use `onload`, `onerror`, and `onabort` since they're the\n    // only way to reliably detect successes and failures but, if they\n    // aren't available, we fall back to using `onreadystatechange`.\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState !== 4) return;\n\n      if (req.aborted) return done();\n\n      if (!supportsLoadAndErrorEvents) {\n        // Assume a status of 0 is an error. This could be a false\n        // positive, but there's no way to tell when using\n        // `onreadystatechange` ):\n        // See matthewwithanm/react-inlinesvg#10.\n\n        // Some browsers don't like you reading XHR properties when the\n        // XHR has been aborted. In case we've gotten here as a result\n        // of that (either our calling `about()` in the timeout handler\n        // or the user calling it directly even though they shouldn't),\n        // be careful about accessing it.\n        var status;\n        try {\n          status = xhr.status;\n        } catch (err) {}\n        var err = status === 0 ? new Error('Internal XHR Error') : null;\n        return done(err);\n      }\n    };\n\n    // IE sometimes fails if you don't specify every handler.\n    // See http://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n    xhr.ontimeout = function() { /* noop */ };\n    xhr.onprogress = function() { /* noop */ };\n\n    xhr.open(req.method, req.url);\n\n    if (req.timeout) {\n      // If we use the normal XHR timeout mechanism (`xhr.timeout` and\n      // `xhr.ontimeout`), `onreadystatechange` will be triggered before\n      // `ontimeout`. There's no way to recognize that it was triggered by\n      // a timeout, and we'd be unable to dispatch the right error.\n      timeoutId = setTimeout(function() {\n        req.timedOut = true;\n        done();\n        try {\n          xhr.abort();\n        } catch (err) {}\n      }, req.timeout);\n    }\n\n    for (k in req.headers) {\n      if (req.headers.hasOwnProperty(k)) {\n        xhr.setRequestHeader(k, req.headers[k]);\n      }\n    }\n\n    xhr.send(req.body);\n\n    return req;\n  }\n\n  var method,\n    methods = ['get', 'post', 'put', 'head', 'patch', 'delete'],\n    verb = function(method) {\n      return function(req, cb) {\n        req = new Request(req);\n        req.method = method;\n        return http(req, cb);\n      };\n    };\n  for (i = 0; i < methods.length; i++) {\n    method = methods[i];\n    http[method] = verb(method);\n  }\n\n  http.plugins = function() {\n    return plugins;\n  };\n\n  http.defaults = function(newValues) {\n    if (newValues) {\n      return factory(extend(defaults, newValues), plugins);\n    }\n    return defaults;\n  };\n\n  http.use = function() {\n    var newPlugins = Array.prototype.slice.call(arguments, 0);\n    return factory(defaults, plugins.concat(newPlugins));\n  };\n\n  http.bare = function() {\n    return factory();\n  };\n\n  http.Request = Request;\n  http.Response = Response;\n  http.RequestError = RequestError;\n\n  return http;\n}\n\nmodule.exports = factory({}, [cleanURL]);\n\n/**\n * Analyze the request to see if it represents an error. If so, return it! An\n * original error object can be passed as a hint.\n */\nfunction getError(req, err) {\n  if (req.aborted) return createError('Request aborted', req, {name: 'Abort'});\n\n  if (req.timedOut) return createError('Request timeout', req, {name: 'Timeout'});\n\n  var xhr = req.xhr;\n  var type = Math.floor(xhr.status / 100);\n\n  var kind;\n  switch (type) {\n    case 0:\n    case 2:\n      // These don't represent errors unless the function was passed an\n      // error object explicitly.\n      if (!err) return;\n      return createError(err.message, req);\n    case 4:\n      // Sometimes 4XX statuses aren't errors.\n      if (xhr.status === 404 && !req.errorOn404) return;\n      kind = 'Client';\n      break;\n    case 5:\n      kind = 'Server';\n      break;\n    default:\n      kind = 'HTTP';\n  }\n  var msg = kind + ' Error: ' +\n        'The server returned a status of ' + xhr.status +\n        ' for the request \"' +\n        req.method.toUpperCase() + ' ' + req.url + '\"';\n  return createError(msg, req);\n}\n"]},"metadata":{},"sourceType":"script"}